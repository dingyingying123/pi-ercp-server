<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <bean id="abstractXADataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init" destroy-method="close" abstract="true">
        <property name="xaDataSourceClassName" value="org.postgresql.xa.PGXADataSource"
        />  <!-- SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL,
            Oracle, PostgreSQL, Sybase, Hana] -->
        <!--   value="org.postgresql.xa.PGXADataSource" -->
        <property name="minPoolSize" value="1" />
        <property name="maxPoolSize" value="40" />
        <property name="borrowConnectionTimeout" value="30" />
        <property name="testQuery" value="select 1"/>
        <property name="maintenanceInterval" value="60" />
    </bean>
    <bean id="mainDataSource" primary="true" parent="abstractXADataSource">
        <property name="uniqueResourceName" value="db_main" />
        <property name="xaProperties">
            <props>
                <!-- 测试数据库 -->
                <!--                 <prop key="url">jdbc:postgresql://pgdb-dev.goldwind.com.cn/sfsdev?currentSchema=public</prop>-->
                <!--                 <prop key="user">fssdev</prop>-->
                <!--                 <prop key="password" >fssdev20200323</prop>-->
                <prop key="url">jdbc:postgresql://10.12.1.102:5432/sfsprd?currentSchema=public</prop>
                <prop key="user">sfsuser</prop>
                <prop key="password" >9TY(fj7kd</prop>
            </props>
        </property>
        <!--   <property name="testQuery" value="select 1 from dual" /> -->
    </bean>

    <bean id="mainSqlSessionFactory" primary="true" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="mainDataSource" />
        <property name="configLocation" value="classpath:persistence/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath*:persistence/xml/**/*.xml" />
    </bean>

    <bean id="mainSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="mainSqlSessionFactory"></constructor-arg>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean id="mainMapper" class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.com.personnel.ercp.*.persistence.mapper" />
        <property name="sqlSessionFactory" ref="mainSqlSessionFactory"/>
        <property name="markerInterface" value="tk.mybatis.mapper.common.Mapper" />
    </bean>

    <!-- mydb数据源(组织架构和人) -->
    <bean id="abstractXADataSourceMydb" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init" destroy-method="close" abstract="true">
        <property name="xaDataSourceClassName" value="org.postgresql.xa.PGXADataSource"/>
        <property name="minPoolSize" value="1" />
        <property name="maxPoolSize" value="10" />
        <property name="borrowConnectionTimeout" value="30" />
        <property name="testQuery" value="select 1"/>
        <property name="maintenanceInterval" value="60" />
    </bean>

    <bean id="mainDataSourceMydb" primary="true" parent="abstractXADataSourceMydb">
        <property name="uniqueResourceName" value="db_main_source" />
        <property name="xaProperties">
            <props>
                <!--                <prop key="url">jdbc:postgresql://pgdb-dev.goldwind.com.cn/mydb?currentSchema=public</prop>-->
                <!--                <prop key="user">mydb</prop>-->
                <!--                <prop key="password" >my123890</prop>-->
                <prop key="url">jdbc:postgresql://10.12.1.102:5432/powerdb?currentSchema=public</prop>
                <prop key="user">poweruser</prop>
                <prop key="password" >pu2018.pg</prop>
            </props>
        </property>
    </bean>

    <bean id="mainSqlSessionFactoryMydb" primary="true" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="mainDataSourceMydb" />
        <property name="configLocation" value="classpath:mydbpersistence/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath*:mydbpersistence/xml/**/*Mapper.xml" />
    </bean>

    <bean id="mainSqlSessionTemplateMydb" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="mainSqlSessionFactoryMydb"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean id="mainMapperMydb" class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.com.personnel.ercp.*.mydbpersistence.mapper" />
        <property name="sqlSessionFactory" ref="mainSqlSessionFactoryMydb"/>
        <property name="markerInterface" value="tk.mybatis.mapper.common.Mapper" />
    </bean>

    <!-- 分布式事务 -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
          init-method="init" destroy-method="close">
        <property name="forceShutdown" value="true" />
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>