<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.personnel.ercp.pi.persistence.mapper.credit.letterofCredit.FssLetterofCreditInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.com.personnel.ercp.pi.persistence.entity.credit.letterofCredit.FssLetterofCreditInfo" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="letter_id" property="letterId" jdbcType="VARCHAR" />
    <result column="letter_number" property="letterNumber" jdbcType="VARCHAR" />
    <result column="applicant_id" property="applicantId" jdbcType="VARCHAR" />
    <result column="applicant_name" property="applicantName" jdbcType="VARCHAR" />
    <result column="applicant_dept" property="applicantDept" jdbcType="VARCHAR" />
    <result column="applicant_date" property="applicantDate" jdbcType="VARCHAR" />
    <result column="event_description" property="eventDescription" jdbcType="VARCHAR" />
    <result column="organ_id" property="organId" jdbcType="VARCHAR" />
    <result column="organ_name" property="organName" jdbcType="VARCHAR" />
    <result column="head_id" property="headId" jdbcType="VARCHAR" />
    <result column="head_code" property="headCode" jdbcType="VARCHAR" />
    <result column="head_name" property="headName" jdbcType="VARCHAR" />
    <result column="currency_id" property="currencyId" jdbcType="VARCHAR" />
    <result column="currency_code" property="currencyCode" jdbcType="VARCHAR" />
    <result column="currency_name" property="currencyName" jdbcType="VARCHAR" />
    <result column="credit_amount" property="creditAmount" jdbcType="NUMERIC" />
    <result column="contract_no" property="contractNo" jdbcType="VARCHAR" />
    <result column="credit_no" property="creditNo" jdbcType="VARCHAR" />
    <result column="beneficiary_id" property="beneficiaryId" jdbcType="VARCHAR" />
    <result column="beneficiary_name" property="beneficiaryName" jdbcType="VARCHAR" />
    <result column="business_description" property="businessDescription" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="approval_status" property="approvalStatus" jdbcType="VARCHAR" />
    <result column="approval_time" property="approvalTime" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="reserve" property="reserve" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="BaseResultMapVO" extends="BaseResultMap" type="cn.com.personnel.ercp.pi.module.credit.FssLetterofCreditInfoVO">
    <result column="frev_id" property="frevId" jdbcType="VARCHAR" />
    <result column="process_inst_id" property="processInstId" jdbcType="VARCHAR" />
    <result column="process_inst_name" property="processInstName" jdbcType="VARCHAR" />
    <result column="process_def_id" property="processDefId" jdbcType="VARCHAR" />
    <result column="process_def_name" property="processDefName" jdbcType="VARCHAR" />
    <result column="work_item_id" property="workItemId" jdbcType="VARCHAR" />
    <result column="work_item_name" property="workItemName" jdbcType="VARCHAR" />
    <result column="action_url" property="actionUrl" jdbcType="VARCHAR" />
    <result column="activity_inst_id" property="activityInstId" jdbcType="VARCHAR" />
    <result column="activity_inst_name" property="activityInstName" jdbcType="VARCHAR" />
    <result column="activity_def_id" property="activityDefId" jdbcType="VARCHAR" />
    <result column="process_status" property="processStatus" jdbcType="VARCHAR" />
  </resultMap>

  <select id="queryLetterofCreditList" resultMap="BaseResultMapVO">
    select h.head_code,h.head_name,bc.code as currency_code,bc.name as currency_name,c.*,
    v.frev_id,v.process_inst_id,v.process_inst_name,v.process_def_id,v.process_def_name,v.work_item_id,
    v.work_item_name,v.action_url,v.activity_inst_id,v.activity_inst_name,v.activity_def_id,v.process_status
    from fss_letter_of_credit_info c left join fss_base_bank_head_office h on c.head_id=h.head_id
    left join fss_base_currency bc on c.currency_id=bc.id
    left join (select v1.* from fss_process_return_value v1 join
    (select vv.primary_key_id,max(vv.process_inst_id) as process_inst_id from fss_process_return_value vv where vv.process_def_name='sfs_xd.letter_of_credit_apply' group by vv.primary_key_id) as rt
    on v1.primary_key_id=rt.primary_key_id and v1.process_inst_id=rt.process_inst_id) v on c.letter_id=v.primary_key_id
    <where> c.deleted='0'
      <if test='fssLetterofCreditInfoVO.isView != null and fssLetterofCreditInfoVO.isView and userId != null and userId != ""'>
        and c.organ_id in (select bu.bukrs from  fss_base_role_organ_busi bu join sec_user_role ur on bu.role_id=ur.role_id
        and ur.user_id=#{userId} group by bu.bukrs)
      </if>
      <if test='(fssLetterofCreditInfoVO.isView == null or !fssLetterofCreditInfoVO.isView) and userId != null and userId != ""'>
         and c.applicant_id = #{userId}
      </if>
      <if test="fssLetterofCreditInfoVO.organName != null and fssLetterofCreditInfoVO.organName != ''">
         and c.organ_name like concat('%', #{fssLetterofCreditInfoVO.organName}, '%')
      </if>
      <if test="fssLetterofCreditInfoVO.headName != null and fssLetterofCreditInfoVO.headName != ''">
         and h.head_name like concat('%', #{fssLetterofCreditInfoVO.headName}, '%')
      </if>
      <if test="fssLetterofCreditInfoVO.creditNo != null and fssLetterofCreditInfoVO.creditNo != ''">
         and c.credit_no like concat('%', #{fssLetterofCreditInfoVO.creditNo}, '%')
      </if>
      <if test="fssLetterofCreditInfoVO.beneficiaryName != null and fssLetterofCreditInfoVO.beneficiaryName != ''">
         and c.beneficiary_name like concat('%', #{fssLetterofCreditInfoVO.beneficiaryName}, '%')
      </if>
      <if test="fssLetterofCreditInfoVO.contractNo != null and fssLetterofCreditInfoVO.contractNo != ''">
         and c.contract_no like concat('%', #{fssLetterofCreditInfoVO.contractNo}, '%')
      </if>
      <if test="fssLetterofCreditInfoVO.approvalStatus != null and fssLetterofCreditInfoVO.approvalStatus != ''">
         and c.approval_status like concat('%', #{fssLetterofCreditInfoVO.approvalStatus}, '%')
      </if>
      <if test="fssLetterofCreditInfoVO.ids != null and fssLetterofCreditInfoVO.ids.size &gt; 0">
         and c.letter_id in
         <foreach collection="fssLetterofCreditInfoVO.ids" item="id" separator="," open="(" close=")"> #{id} </foreach>
      </if>
    </where>
    order by c.create_time desc
  </select>

  <select id="getLetterNumber" parameterType="java.lang.String" resultType="java.lang.String">
      SELECT
        #{ prefix } || CASE WHEN res.str ISNULL THEN '0001' ELSE res.str END
      FROM (
        SELECT
          to_char(MAX(regexp_replace(letter_number,'('|| #{ prefix } ||')(\d{4})','\2','g')::int + 1), 'FM0000') as str
        FROM
          fss_letter_of_credit_info
        WHERE letter_number ~ ('^'|| #{ prefix } ||'\d{4}$')
      ) res
  </select>
  
  <select id="getVersion" parameterType="java.lang.String" resultType="java.lang.String">
      select cast(i.version as integer)+1 as version from fss_letter_of_credit_info i
      where i.letter_number=#{letterNumber} order by cast(i.version as integer) desc limit 1
  </select>

  <select id="getNoReferenceInfo" resultMap="BaseResultMap">
    select  *  from  fss_letter_of_credit_info as temp
     <where>
       and temp.approval_status='审批通过'
       <if test="fssLetterofCreditInfo.letterNumber != null and fssLetterofCreditInfo.letterNumber != ''">
       and   temp.letter_number like concat('%', #{fssLetterofCreditInfo.letterNumber}, '%')
       </if>
       <if test="fssLetterofCreditInfo.contractNo != null and fssLetterofCreditInfo.contractNo != ''">
       and   temp.contract_no like concat('%', #{fssLetterofCreditInfo.contractNo}, '%')
       </if>
       and  not exists(SELECT  1 from  fss_letter_of_credit_mange as temp1 where temp.letter_number =temp1.letter_number)
     </where>
  </select>

  <delete id="deleteLetterofCredit">
    <if test="ids != null and ids.size &gt; 0">
      delete from fss_letter_of_credit_info
      <where> letter_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")"> #{id} </foreach>
      </where>
    </if>
  </delete>

  <select id="selectCreditByInstId" resultMap="BaseResultMap">
    select c.* from fss_letter_of_credit_info c join fss_process_return_value v on c.letter_id=v.primary_key_id
    where v.process_inst_id=#{processInstID} limit 1
  </select>
</mapper>