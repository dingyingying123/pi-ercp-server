<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.personnel.ercp.pi.persistence.mapper.receivable.FssBillReceivableInfoMapper">
    <resultMap id="BaseResultMap"
               type="cn.com.personnel.ercp.pi.persistence.entity.receivable.FssBillReceivableInfoEntity">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="BaseResultMap" property="receId" jdbcType="VARCHAR"/>
        <result column="rece_id" property="receId" jdbcType="VARCHAR"/>
        <result column="rece_number" property="receNumber" jdbcType="VARCHAR"/>
        <result column="s_date" property="sDate" jdbcType="TIMESTAMP"/>
        <result column="rece_money" property="receMoney" jdbcType="VARCHAR"/>
        <result column="c_date" property="cDate" jdbcType="TIMESTAMP"/>
        <result column="stop_date" property="stopDate" jdbcType="TIMESTAMP"/>
        <result column="rece_state" property="receState" jdbcType="VARCHAR"/>
        <result column="rece_form" property="receForm" jdbcType="VARCHAR"/>
        <result column="is_transfer" property="isTransfer" jdbcType="VARCHAR"/>
        <result column="is_state" property="isState" jdbcType="VARCHAR"/>
        <result column="currency" property="currency" jdbcType="VARCHAR"/>
        <result column="currency_code" property="currencyCode" jdbcType="VARCHAR"/>
        <result column="creator_id" property="creatorId" jdbcType="VARCHAR"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="signature_state" property="signatureState" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="storage_state" property="storageState" jdbcType="VARCHAR"/>
        <result column="transfer_id" property="transferId" jdbcType="VARCHAR"/>
        <result column="upd_time" property="updTime" jdbcType="TIMESTAMP"/>
        <result column="company_id" property="companyId" jdbcType="TIMESTAMP"/>
        <result column="company_name" property="companyName" jdbcType="TIMESTAMP"/>
        <result column="rr_id" property="rrId" jdbcType="VARCHAR"/>
        <result column="rd_id" property="rdId" jdbcType="VARCHAR"/>
        <result column="discount_id" property="discountId" jdbcType="VARCHAR"/>
        <result column="acceptor_name" property="acceptorName" jdbcType="VARCHAR"/>
        <result column="acceptor_bank_name" property="acceptorBankName" jdbcType="VARCHAR"/>
        <result column="acceptor_bank_number" property="acceptorBankNumber" jdbcType="VARCHAR"/>
        <result column="acceptor_bank_car_id" property="acceptorBankCarId" jdbcType="VARCHAR"/>
        <result column="rece_prctr" property="recePrctr" jdbcType="VARCHAR"/>
        <result column="rece_ltext" property="receLtext" jdbcType="VARCHAR"/>
        <result column="bill_Id" property="billId" jdbcType="VARCHAR"/>
        <result column="other_money" property="otherMoney" jdbcType="VARCHAR"/>
        <result column="signature_one" property="signatureOne" jdbcType="VARCHAR"/>
        <result column="signature_two" property="signatureTwo" jdbcType="VARCHAR"/>
        <result column="signature_all" property="signatureAll" jdbcType="VARCHAR"/>
        <result column="discount_rate_self" property="discountRateSelf" jdbcType="NUMERIC"/>
        <result column="updater_id" property="updaterId" jdbcType="VARCHAR"/>
        <result column="updater_name" property="updaterName" jdbcType="VARCHAR"/>
        <result column="enter_transfer_id" property="enterTransferId" jdbcType="VARCHAR"/>
        <result column="claim_status" property="claimStatus" jdbcType="VARCHAR"/>
        <result column="summary_id" property="summaryId" jdbcType="VARCHAR"/>
    </resultMap>
    <!--新增数据-->
    <insert id="addFssBillReceivableInfo"
            parameterType="cn.com.personnel.ercp.pi.persistence.entity.receivable.FssBillReceivableInfoEntity">
        INSERT INTO fss_bill_receivable_info (rece_id, rece_number, s_date, rece_money, c_date, stop_date,
                                              rece_state, rece_form, is_transfer, is_state, currency, creator_id, creator,
                                               create_time,storage_state,currency_code,company_id,company_name,rr_id,rd_id,transfer_id,discount_id,signature_state,
         acceptor_name,acceptor_bank_name,acceptor_bank_number,acceptor_bank_car_id,rece_prctr,rece_ltext,bill_id,enter_transfer_id)
        VALUES
            (#{receId}, #{receNumber}, #{sDate}, #{receMoney}, #{cDate}, #{stopDate}, #{receState}, #{receForm},
                        #{isTransfer}, #{isState}, #{currency}, #{creatorId}, #{creator}, #{createTime},#{storageState},#{currencyCode},#{companyId},
                        #{companyName},#{rrId},#{rdId},#{transferId},#{discountId},#{signatureState},#{acceptorName},#{acceptorBankName},#{acceptorBankNumber},
                        #{acceptorBankCarId},#{recePrctr},#{receLtext},#{billId},#{enterTransferId})
    </insert>
    <select id="selFssBillReceivableInfo" resultMap="BaseResultMap" parameterType="String">
        SELECT *
        FROM fss_bill_receivable_info
        WHERE rece_id = #{receId}
    </select>
    <!--修改数据-->
    <update id="updFssBillReceivableInfo"
            parameterType="cn.com.personnel.ercp.pi.persistence.entity.receivable.FssBillReceivableInfoEntity">
        update fss_bill_receivable_info set rece_id = #{receId}
        <if test="receNumber!=null">
            ,rece_number = #{receNumber}
        </if>
        <if test="sDate!=null">
            ,s_date = #{sDate}
        </if>
        <if test="receMoney!=null">
            ,rece_money = #{receMoney}
        </if>
        <if test="cDate!=null">
            ,c_date = #{cDate}
        </if>
        <if test="stopDate!=null">
            ,stop_date = #{stopDate}
        </if>
        <if test="receState!=null">
            ,rece_state = #{receState}
        </if>
        <if test="receForm!=null">
            ,rece_form = #{receForm}
        </if>
        <if test="isTransfer!=null">
            ,is_transfer = #{isTransfer}
        </if>
        <if test="isState!=null">
            ,is_state = #{isState}
        </if>
        <if test="currency!=null">
            ,currency = #{currency}
        </if>
        <if test="transferId!=null">
            ,transfer_id = #{transferId}
        </if>
         <if test="signatureState!=null">
            ,signature_state = #{signatureState}
        </if>
        <if test="storageState!=null">
            ,storage_state = #{storageState}
        </if>
        <if test="updTime!=null">
            ,upd_time = #{updTime}
        </if>
        <if test="currencyCode!=null">
            ,currency_code = #{currencyCode}
        </if>
        <if test="companyId!=null">
            ,company_id = #{companyId}
        </if>
        <if test="companyName!=null">
            ,company_name = #{companyName}
        </if>
        <if test="rrId!=null">
            ,rr_id = #{rrId}
        </if>
        <if test="rdId!=null">
            ,rd_id = #{rdId}
        </if>
        <if test="discountId!=null">
            ,discount_id = #{discountId}
        </if>
        <if test="acceptorName!=null">
            ,acceptor_name = #{acceptorName}
        </if>
        <if test="acceptorBankName!=null">
            ,acceptor_bank_name = #{acceptorBankName}
        </if>
        <if test="acceptorBankNumber!=null">
            ,acceptor_bank_number = #{acceptorBankNumber}
        </if>
        <if test="acceptorBankCarId!=null">
            ,acceptor_bank_car_id = #{acceptorBankCarId}
        </if>
        <if test="recePrctr!=null">
            ,rece_prctr = #{recePrctr}
        </if>
        <if test="receLtext!=null">
            ,rece_ltext = #{receLtext}
        </if>
        <if test="otherMoney!=null">
            ,other_money = #{otherMoney}
        </if>
        <if test="discountRateSelf!=null">
            ,discount_rate_self = #{discountRateSelf}
        </if>
        <if test="updaterId!=null">
            ,updater_id = #{updaterId}
        </if>
        <if test="updaterName!=null">
            ,updater_name = #{updaterName}
        </if>
        where rece_id = #{receId}
    </update>
    <!--删除数据-->
    <delete id="delFssBillReceivableInfo">
        DELETE FROM fss_bill_receivable_info
        WHERE rece_id = #{receId}
    </delete>
    <!--查询数据-->
    <select id="selFssBillReceivableInfos" parameterType="cn.com.personnel.ercp.pi.module.receivable.BillReceivableSVO"
            resultType="cn.com.personnel.ercp.pi.module.receivable.BillReceivableSDTO">
        SELECT
        ri.rece_id as receId,
        ri.rece_number as receNumber,
        ri.s_date as sDate,
        ri.rece_money as receMoney,
        ri.c_date as cDate,
        ri.stop_date as stopDate,
        ri.rece_state as receState,
        ri.storage_state as storageState,
        ri.rece_form as receForm,
        ri.is_transfer as isTransfer,
        ri.is_state as isState,
        ri.currency as currency,
        ri.creator_id as creatorId,
        ri.creator as creator,
        ri.create_time as createTime,
        ri.upd_time as updTime,
        ri.currency_code as currencyCode,
        ri.company_id as companyId,
        ri.company_name as companyName,
        ri.rece_prctr as recePrctr,
        ri.rece_ltext as receLtext,
        rd.rd_id as rdId,
        rd.admin_depart_id as adminDepartId,
        rd.admin_depart as adminDepart,
        rd.custodian_id as custodianId,
        rd.custodian,
        rd.phone,
        rd.safekeep_depart_id as safekeepDepartId,
        rd.safekeep_depart as safekeepDepart,
        rd.effective_date as effectiveDate,
        rd.fail_date as failDate,
        rder.drawer_id as drawerId,
        rder.drawer_name as drawerName,
        rder.drawer_number as drawerNumber,
        rder.drawer_bank_id as drawerBankId,
        rder.drawer_bank as drawerBank,
        rder.drawer_head_bank_id as drawerHeadBankId,
        rder.drawer_head_bank as drawerHeadBank,
        rp.payee_id as payeeId,
        rp.payee_bank as payeeBank,
        rp.payee_name as payeeName,
        rp.payee_number as payeeNumber,
        rp.payee_bank_id as payeeBankId,
        rr.rr_id as rrId,
        rr.rr_type as rrType,
        rr.customer_a_id as customerAId,
        rr.customer_a_name as customerAName,
        rr.rr_sum_money as rrSumMoney,
        rr.rr_c_bank_name as rrCBankName,
        rr.rr_c_number as rrCNumber,
        rr.rr_c_bank_id as rrCBankId,
        rr.rr_date as rrDate,
        rr.rr_form as rrForm,
        rr.rr_form_number as rrFormNumber,
        rr.rr_number as rrNumber,
        rr.payment_in_number as paymentInNumber,
        rr.handover_person as handoverPerson,
        rr.handover_person_id as handoverPersoId,
        rr.remarks as remarks,
        rr.customer_b_id as customerBId,
        rr.customer_b_name as customerBName,
        rr.rr_cb_bank_name as rrCbBankName,
        rr.rr_cb_bank_id as rrCbBankId,
        rr.rr_cb_number as rrCbNumber,
        rr.up_rr_type as upRrType,
        rr.up_customer_id as upCustomerId,
        rr.up_customer_name as upCustomerName,
        tra.transfer_id as transferId,
        case when ri.transfer_id = ri.enter_transfer_id then '' else tra.apply_number end as applyNumber,
        tra.transfer_type as transferType,
        ri.signature_state as signatureState,
        ri.acceptor_name as acceptorName,
        ri.acceptor_bank_name  as acceptorBankName,
        ri.acceptor_bank_number  as acceptorBankNumber,
        ri.acceptor_bank_car_id  as acceptorBankCarId,
        (select apply_number from fss_bill_receivable_transfer where transfer_id = ri.enter_transfer_id)  as enterApplyNumber
        FROM
        fss_bill_receivable_info ri
        LEFT JOIN fss_bill_receivable_depart rd ON ri.rd_id = rd.rd_id
        LEFT JOIN fss_bill_receivable_drawer rder ON ri.rece_id = rder.rece_id
        LEFT JOIN fss_bill_receivable_payee rp ON ri.rece_id = rp.rece_id
        LEFT JOIN fss_bill_receivable_recite rr ON ri.rr_id = rr.rr_id
        LEFT JOIN fss_bill_receivable_transfer tra ON ri.transfer_id = tra.transfer_id
        WHERE
        ri.is_state = #{isState}
        <if test="userId != null and userId != ''">
           and ri.company_id in (select bu.bukrs from  fss_base_role_organ_busi bu join sec_user_role ur on bu.role_id=ur.role_id
            and (bu.mandt=#{mandtText} or bu.mandt is null or bu.mandt ='') and ur.user_id=#{userId} group by bu.bukrs)
        </if>
        <if test="companyId!=null">
            and ri.company_id = #{companyId}
        </if>
        <if test="companyName!=null and companyName!=''">
            and ri.company_name like concat('%',#{companyName},'%')
        </if>
        <if test="receNumberEnd!=null and receNumberStart!=null">
            and (ri.rece_number &lt;= #{receNumberEnd} and ri.rece_number &gt;= #{receNumberStart})
        </if>
        <if test="receNumberStart!=null and receNumberStart == null">
            and ri.rece_number like concat('%',#{receNumberStart},'%')
        </if>
        <if test="receNumberEnd!=null and receNumberEnd == null">
            and ri.rece_number like concat('%',#{receNumberEnd},'%')
        </if>
        <if test="receNumbers!=null and receNumbers.size() &gt; 0">
            <foreach item="item" index="index" collection="receNumbers" open="AND (" close=")" separator="or" >
                ri.rece_number like concat('%',#{item})
            </foreach>
        </if>
        <if test="entryStatuss!=null and entryStatuss.size() &gt; 0">
            and tra.entry_status in
            <foreach item="item" index="index" collection="entryStatuss" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="cDateStart!=null">
            and ri.c_date &gt;= #{cDateStart}
        </if>
        <if test="cDateEnd!=null">
            and ri.c_date &lt;= #{cDateEnd}
        </if>
        <if test="receMoneyStart!=null">
            and ri.rece_money &gt;= #{receMoneyStart}
        </if>
        <if test="receMoneyEnd!=null">
            and ri.rece_money &lt;= #{receMoneyEnd}
        </if>
        <if test="receState!=null">
            and ri.rece_state = #{receState}
        </if>
        <if test="storageState!=null">
            and ri.storage_state = #{storageState}
        </if>
        <if test="payCompanyId!=null">
            and tra.pay_company_id = #{payCompanyId}
        </if>
        <if test="drawerId!=null">
            and rder.drawer_id = #{drawerId}
        </if>
        <if test="drawerId!=null">
            and rder.drawer_bank_id = #{drawerBankId}
        </if>
        <if test="sDateStart!=null">
            and ri.s_date &gt;= #{sDateStart}
        </if>
        <if test="sDateEnd!=null">
            and ri.s_date &lt;= #{sDateEnd}
        </if>
        <if test="stopDateStart!=null">
            and ri.stop_date &gt;= #{stopDateStart}
        </if>
        <if test="stopDateEnd!=null">
            and ri.stop_date &lt;= #{stopDateEnd}
        </if>
        <if test="paymentInNumber!=null">
            and rr.payment_in_number = #{paymentInNumber}
        </if>
        <if test="rrSumMoney!=null">
            and rr.rr_sum_money = #{rrSumMoney}
        </if>
        <if test="rrType!=null">
            and rr.rr_type = #{rrType}
        </if>
        <if test="rrDateStart!=null">
            and rr.rr_date &gt;= #{rrDateStart}
        </if>
        <if test="rrDateEnd!=null">
            and rr.rr_date &lt;= #{rrDateEnd}
        </if>
        <if test="customerBId!=null">
            and rr.customer_b_id = #{customerBId}
        </if>
        <if test="upCustomerId!=null">
            and rr.up_customer_id = #{upCustomerId}
        </if>
        <if test="upCustomerName!=null and upCustomerName!=''">
            and rr.up_customer_name like concat('%',#{upCustomerName},'%')
        </if>
        <if test="upRrType!=null">
            and rr.up_rr_type = #{upRrType}
        </if>
        <if test="applyNumber!=null and applyNumber!=''">
            and tra.apply_number = #{applyNumber}
        </if>
        <if test="avgDays!=null">
            and date_part('day', CAST(ri.stop_date AS TIMESTAMP) - CAST(ri.c_date AS TIMESTAMP)) +
            1 = #{avgDays}
        </if>
        <if test="receForm!=null">
            and ri.rece_form = #{receForm}
        </if>
        ORDER BY ri.create_time desc
    </select>



    <select id="generateFormal" parameterType="String"
            resultType="cn.com.personnel.ercp.pi.module.receivable.BillReceivableSDTO">
        SELECT
            ri.rece_id         AS receId,
            ri.rece_number     AS receNumber,
            ri.rece_money      AS receMoney,
            ri.company_id      AS companyId,
            ri.company_name    AS companyName,
            rr.rr_id as rrId,
            rr.up_customer_id as upCustomerId,
            rr.up_customer_name as upCustomerName
        FROM
            fss_bill_receivable_info ri
            LEFT JOIN fss_bill_receivable_recite rr ON ri.rece_id = rr.rece_id
        WHERE ri.rece_id = #{receId} AND ri.is_state = 0
    </select>
    <select id="selReceInfoByReceNumber" resultType="String" parameterType="String">
        SELECT rece_id
        FROM fss_bill_receivable_info
        WHERE rece_number = #{receNumber} AND is_state = 0
    </select>

    <select id="selReciteGroup" resultType="cn.com.personnel.ercp.pi.module.receivable.ReciteGroupDTO"
            parameterType="cn.com.personnel.ercp.pi.module.receivable.CalculatingBestVO">
        SELECT
            ri.rece_id                                                                                             AS receId,
            ri.company_id as companyId,
            ri.company_name as companyName,
            ri.rece_number                                                                                         AS receNumber,
            rd.drawer_bank                                                                                         AS drawerBank,
            ri.rece_state                                                                                          AS receState,
            ri.rece_money                                                                                          AS receMoney,
            ri.c_date                                                                                              AS cDate,
            ri.stop_date                                                                                           AS stopDate,
            date_part('day', CAST(ri.stop_date AS TIMESTAMP) - CAST(now() AS TIMESTAMP)) +
            1                                                                                                      AS stopDay,
            ri.rece_money * (date_part('day', CAST(ri.stop_date AS TIMESTAMP) - CAST(now() AS TIMESTAMP)) +
                             1)                                                                                    AS rideNum,
            abs((date_part('day', CAST(ri.stop_date AS TIMESTAMP) - CAST(now() AS TIMESTAMP)) + 1) -  #{avgDays}) as czDay
        FROM
            fss_bill_receivable_info ri
            LEFT JOIN fss_bill_receivable_drawer rd ON ri.rece_id = rd.rece_id
            LEFT JOIN fss_bill_receivable_transfer rt ON ri.transfer_id = rt.transfer_id
        WHERE
            ri.rece_state = '收存'
            AND ri.storage_state != '入票据池'
            AND ri.rece_money &lt;= #{rrSumMoney}
            and rd.drawer_bank not like concat('%','财务','%')
            AND ri.company_id = #{companyId}
            AND (
                ri.transfer_id IS NULL or ri.transfer_id = ''
                OR rt.transfer_type = '部分签收-一单签收'
                OR rt.transfer_type = '部分签收-二单签收'
                OR rt.transfer_type = '全单不签收'
                OR rt.transfer_type = '全单签收'
            )
            AND ri.stop_date &lt;= #{stopDateEnd}
            AND ri.stop_date &gt;= #{stopDateStart}
        <if test="receIds!=null">
            and ri.rece_id not in
            <foreach item="item" index="index" collection="receIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY czDay asc,ri.rece_money desc
    </select>

    <select id="getReceivableInfo" resultType="cn.com.personnel.ercp.pi.module.receivable.BillReceivableInfoDTO"
            parameterType="String">
        SELECT
        ri.rece_id as receId,
        ri.rece_number as receNumber,
        ri.s_date as sDate,
        ri.rece_money as receMoney,
        ri.c_date as cDate,
        ri.stop_date as stopDate,
        ri.rece_state as receState,
        ri.storage_state as storageState,
        ri.rece_form as receForm,
        ri.is_transfer as isTransfer,
        ri.is_state as isState,
        ri.currency as currency,
        ri.creator_id as creatorId,
        ri.creator as creator,
        ri.create_time as createTime,
        ri.upd_time as updTime,
        ri.currency_code as currencyCode,
        ri.company_id as companyId,
        ri.company_name as companyName,
        rd.rd_id as rdId,
        rd.admin_depart_id as adminDepartId,
        rd.admin_depart as adminDepart,
        rd.custodian_id as custodianId,
        rd.custodian,
        rd.phone,
        rd.safekeep_depart_id as safekeepDepartId,
        rd.safekeep_depart as safekeepDepart,
        rd.effective_date as effectiveDate,
        rd.fail_date as failDate,
        rder.drawer_id as drawerId,
        rder.drawer_name as drawerName,
        rder.drawer_number as drawerNumber,
        rder.drawer_bank_id as drawerBankId,
        rder.drawer_bank as drawerBank,
        rp.payee_id as payeeId,
        rp.payee_bank as payeeBank,
        rp.payee_name as payeeName,
        rp.payee_number as payeeNumber,
        rp.payee_bank_id as payeeBankId,
        rr.rr_id as rrId,
        rr.rr_type as rrType,
        rr.customer_a_id as customerAId,
        rr.customer_a_name as customerAName,
        rr.rr_sum_money as rrSumMoney,
        rr.rr_c_bank_name as rrCBankName,
        rr.rr_c_number as rrCNumber,
        rr.rr_c_bank_id as rrCBankId,
        rr.rr_date as rrDate,
        rr.rr_form as rrForm,
        rr.rr_form_number as rrFormNumber,
        rr.rr_number as rrNumber,
        rr.payment_in_money as paymentInMoney,
        rr.payment_in_number as paymentInNumber,
        rr.handover_person as handoverPerson,
        rr.handover_person_id as handoverPersoId,
        rr.remarks as remarks,
        rr.customer_b_id as customerBId,
        rr.customer_b_name as customerBName,
        rr.rr_cb_bank_name as rrCbBankName,
        rr.rr_cb_bank_id as rrCbBankId,
        rr.rr_cb_number as rrCbNumber,
        rr.up_rr_type as upRrType,
        rr.cpding_procedure as cpdingProcedure,
        rr.up_customer_id as upCustomerId,
        rr.up_customer_name as upCustomerName,
        tra.transfer_id as transferId,
        tra.apply_number as applyNumber,
        tra.transfer_type as transferType,
        col.col_date as colDate,
        col.col_bank_id as colBankId,
        col.col_bank_name as colBankName,
        col.col_bank_number as colBankNumber,
        col.col_money as colMoney,
        col.col_remark as colRemark,
        ple.ple_date as pleDate,
        ple.ple_stop_date as pleStopDate,
        ple.ple_organ as pleOrgan,
        ple.ple_purpose as plePurpose,
        ple.dec_date as decDate,
        ri.rece_prctr as recePrctr,
        ri.rece_ltext as receLtext,
        rr.rr_prctr as rrPrctr,
        rr.rr_ltext as rrLtext,
        col.group_no as groupNo,
        col.entry_number as entryNumber,
        col.entry_status as entryStatus,
        col.document_no as documentNo,
        col.error_message as errorMessage
        FROM
        fss_bill_receivable_info ri
        LEFT JOIN fss_bill_receivable_depart rd ON rd.rd_id = ri.rd_id
        LEFT JOIN fss_bill_receivable_drawer rder ON ri.rece_id = rder.rece_id
        LEFT JOIN fss_bill_receivable_payee rp ON ri.rece_id = rp.rece_id
        LEFT JOIN fss_bill_receivable_recite rr ON ri.rr_id = rr.rr_id
        LEFT JOIN fss_bill_receivable_collection col ON ri.rece_id = col.rece_id
        LEFT JOIN fss_bill_receivable_pledge ple ON ri.rece_id = ple.rece_id
        LEFT JOIN fss_bill_receivable_transfer tra ON ri.transfer_id = tra.transfer_id
        WHERE
        ri.is_state = 0 and ri.rece_id = #{receId}
	order by ri.rece_number
    </select>
    <select id="getReceivableInfoByTId" resultType="cn.com.personnel.ercp.pi.module.receivable.BillReceivableInfoDTO"
            parameterType="String">
         SELECT
        ri.rece_id as receId,
        ri.rece_number as receNumber,
        ri.s_date as sDate,
        ri.rece_money as receMoney,
        ri.c_date as cDate,
        ri.stop_date as stopDate,
        ri.rece_state as receState,
        ri.storage_state as storageState,
        ri.rece_form as receForm,
        ri.is_transfer as isTransfer,
        ri.is_state as isState,
        ri.currency as currency,
        ri.creator_id as creatorId,
        ri.creator as creator,
        ri.create_time as createTime,
        ri.upd_time as updTime,
        ri.currency_code as currencyCode,
        ri.company_id as companyId,
        ri.company_name as companyName,
        rd.rd_id as rdId,
        rd.admin_depart_id as adminDepartId,
        rd.admin_depart as adminDepart,
        rd.custodian_id as custodianId,
        rd.custodian,
        rd.phone,
        rd.safekeep_depart_id as safekeepDepartId,
        rd.safekeep_depart as safekeepDepart,
        rd.effective_date as effectiveDate,
        rd.fail_date as failDate,
        rder.drawer_id as drawerId,
        rder.drawer_name as drawerName,
        rder.drawer_number as drawerNumber,
        rder.drawer_bank_id as drawerBankId,
        rder.drawer_bank as drawerBank,
        rp.payee_id as payeeId,
        rp.payee_bank as payeeBank,
        rp.payee_name as payeeName,
        rp.payee_number as payeeNumber,
        rp.payee_bank_id as payeeBankId,
        rr.rr_id as rrId,
        rr.rr_type as rrType,
        rr.customer_a_id as customerAId,
        rr.customer_a_name as customerAName,
        rr.rr_sum_money as rrSumMoney,
        rr.rr_c_bank_name as rrCBankName,
        rr.rr_c_number as rrCNumber,
        rr.rr_c_bank_id as rrCBankId,
        rr.rr_date as rrDate,
        rr.rr_form as rrForm,
        rr.rr_form_number as rrFormNumber,
        rr.rr_number as rrNumber,
        rr.payment_in_number as paymentInNumber,
        rr.handover_person as handoverPerson,
        rr.handover_person_id as handoverPersoId,
        rr.remarks as remarks,
        rr.customer_b_id as customerBId,
        rr.customer_b_name as customerBName,
        rr.rr_cb_bank_name as rrCbBankName,
        rr.rr_cb_bank_id as rrCbBankId,
        rr.rr_cb_number as rrCbNumber,
        rr.up_rr_type as upRrType,
        rr.up_customer_id as upCustomerId,
        rr.up_customer_name as upCustomerName,
        tra.transfer_id as transferId,
        tra.apply_number as applyNumber,
        tra.transfer_type as transferType,
        col.col_date as colDate,
        col.col_bank_id as colBankId,
        col.col_bank_name as colBankName,
        col.col_bank_number as colBankNumber,
        col.col_money as colMoney,
        col.col_remark as colRemark,
        ple.ple_date as pleDate,
        ple.ple_stop_date as pleStopDate,
        ple.ple_organ as pleOrgan,
        ple.ple_purpose as plePurpose,
        ple.dec_date as decDate
        FROM
        fss_bill_receivable_info ri
        LEFT JOIN fss_bill_receivable_depart rd ON rd.rd_id = ri.rd_id
        LEFT JOIN fss_bill_receivable_drawer rder ON ri.rece_id = rder.rece_id
        LEFT JOIN fss_bill_receivable_payee rp ON ri.rece_id = rp.rece_id
        LEFT JOIN fss_bill_receivable_recite rr ON ri.rece_id = rr.rece_id
        LEFT JOIN fss_bill_receivable_collection col ON ri.rece_id = col.rece_id
        LEFT JOIN fss_bill_receivable_pledge ple ON ri.rece_id = ple.rece_id
        LEFT JOIN fss_bill_receivable_transfer tra ON ri.transfer_id = tra.transfer_id
        WHERE ri.transfer_id = #{transferId} or ri.enter_transfer_id = #{transferId}
        ORDER BY ri.create_time desc
    </select>
    <select id="getReceivableInfoByPayNumber"
            resultType="cn.com.personnel.ercp.pi.module.receivable.BillReceivableInfoDTO" parameterType="String">
            SELECT
        ri.rece_id as receId,
        ri.rece_number as receNumber,
        ri.s_date as sDate,
        ri.rece_money as receMoney,
        ri.c_date as cDate,
        ri.stop_date as stopDate,
        ri.rece_state as receState,
        ri.storage_state as storageState,
        ri.rece_form as receForm,
        ri.is_transfer as isTransfer,
        ri.is_state as isState,
        ri.currency as currency,
        ri.creator_id as creatorId,
        ri.creator as creator,
        ri.create_time as createTime,
        ri.upd_time as updTime,
        ri.currency_code as currencyCode,
        ri.company_id as companyId,
        ri.company_name as companyName,
        rd.rd_id as rdId,
        rd.admin_depart_id as adminDepartId,
        rd.admin_depart as adminDepart,
        rd.custodian_id as custodianId,
        rd.custodian,
        rd.phone,
        rd.safekeep_depart_id as safekeepDepartId,
        rd.safekeep_depart as safekeepDepart,
        rd.effective_date as effectiveDate,
        rd.fail_date as failDate,
        rder.drawer_id as drawerId,
        rder.drawer_name as drawerName,
        rder.drawer_number as drawerNumber,
        rder.drawer_bank_id as drawerBankId,
        rder.drawer_bank as drawerBank,
        rp.payee_id as payeeId,
        rp.payee_bank as payeeBank,
        rp.payee_name as payeeName,
        rp.payee_number as payeeNumber,
        rp.payee_bank_id as payeeBankId,
        rr.rr_id as rrId,
        rr.rr_type as rrType,
        rr.customer_a_id as customerAId,
        rr.customer_a_name as customerAName,
        rr.rr_sum_money as rrSumMoney,
        rr.rr_c_bank_name as rrCBankName,
        rr.rr_c_number as rrCNumber,
        rr.rr_c_bank_id as rrCBankId,
        rr.rr_date as rrDate,
        rr.rr_form as rrForm,
        rr.rr_form_number as rrFormNumber,
        rr.rr_number as rrNumber,
        rr.payment_in_number as paymentInNumber,
        rr.handover_person as handoverPerson,
        rr.handover_person_id as handoverPersoId,
        rr.remarks as remarks,
        rr.customer_b_id as customerBId,
        rr.customer_b_name as customerBName,
        rr.rr_cb_bank_name as rrCbBankName,
        rr.rr_cb_bank_id as rrCbBankId,
        rr.rr_cb_number as rrCbNumber,
        rr.up_rr_type as upRrType,
        rr.up_customer_id as upCustomerId,
        rr.up_customer_name as upCustomerName,
        tra.transfer_id as transferId,
        tra.apply_number as applyNumber,
        tra.transfer_type as transferType,
        col.col_date as colDate,
        col.col_bank_id as colBankId,
        col.col_bank_name as colBankName,
        col.col_bank_number as colBankNumber,
        col.col_money as colMoney,
        col.col_remark as colRemark,
        ple.ple_date as pleDate,
        ple.ple_stop_date as pleStopDate,
        ple.ple_organ as pleOrgan,
        ple.ple_purpose as plePurpose,
        ple.dec_date as decDate
        FROM
        fss_bill_receivable_info ri
        LEFT JOIN fss_bill_receivable_depart rd ON rd.rd_id = ri.rd_id
        LEFT JOIN fss_bill_receivable_drawer rder ON ri.rece_id = rder.rece_id
        LEFT JOIN fss_bill_receivable_payee rp ON ri.rece_id = rp.rece_id
        LEFT JOIN fss_bill_receivable_recite rr ON ri.rece_id = rr.rece_id
        LEFT JOIN fss_bill_receivable_collection col ON ri.rece_id = col.rece_id
        LEFT JOIN fss_bill_receivable_pledge ple ON ri.rece_id = ple.rece_id
        LEFT JOIN fss_bill_receivable_transfer tra ON ri.transfer_id = tra.transfer_id
        WHERE rr.payment_in_number = #{paymentInNumber}
        ORDER BY ri.rece_number
    </select>

    <select id="selCount" parameterType="String" resultType="Integer">
        SELECT COUNT
        (*)
        FROM
            fss_bill_receivable_info ri
            LEFT JOIN fss_bill_receivable_recite rr ON ri.rece_id = rr.rece_id
        WHERE ri.rece_number = #{receNumber} AND rr.rr_type = '外部背书'
    </select>
    <select id="selMaxDate" parameterType="String" resultType="Date">
        SELECT max(rr.rr_date)
        FROM
            fss_bill_receivable_info ri
            LEFT JOIN fss_bill_receivable_recite rr ON ri.rece_id = rr.rece_id
        WHERE ri.rece_number = #{receNumber} AND rr.rr_type = '外部背书'
        GROUP BY ri.rece_id
    </select>

    <select id="selMaxDateByCompanyId" resultType="Date">
        SELECT max(rr.rr_date)
        FROM
            fss_bill_receivable_info ri
            LEFT JOIN fss_bill_receivable_recite rr ON ri.rece_id = rr.rece_id
        WHERE ri.rece_number = #{receNumber} and ri.company_id=#{companyId} AND rr.rr_type = '外部背书'
        GROUP BY ri.rece_id
    </select>

    <select id="selBillNoReceInfo" parameterType="cn.com.personnel.ercp.pi.module.receivable.SelBillNoReceInfo" resultType="cn.com.personnel.ercp.pi.module.receivable.BillNoReceInfo">
        SELECT
        ri.rece_id as receId,
        ri.company_id as companyId,
        ri.company_name as companyName,
        ri.rece_number as receNumber,
        ri.c_date as cDate,
        ri.stop_date as stopDate,
        ri.rece_money as receMoney,
        dra.drawer_id as drawerId,
        dra.drawer_name as drawerName,
        dof.head_id as headId,
        dof.head_name as headName,
        dra.drawer_bank_id as drawerBankId,
        dra.drawer_bank as drawerBank,
        dra.drawer_number as drawerNumber,
        rec.rr_type as rrType,
        rec.customer_b_id as customerBId,
        rec.customer_b_name as customerBName,
        CASE
        wit.with_out
        WHEN 1 THEN
        '是'
        WHEN 0 THEN
        '否'
        else
        '否'
        END
        AS noReceState,
        res.group_no as groupNo,
        res.entry_number as entryNumber,
        res.document_no as documentNo,
        res.entry_status as entryStatus,
        res.error_message as errorMessage
        FROM
        fss_bill_receivable_info ri
        LEFT JOIN fss_bill_receivable_drawer dra ON ri.rece_id = dra.rece_id
        LEFT JOIN fss_bill_receivable_recite rec ON ri.rr_id = rec.rr_id
        LEFT JOIN fss_base_bank_head_office dof ON dof.head_id = dra.drawer_head_bank_id
        LEFT JOIN fss_bank_head_without wit ON wit.head_id = dof.head_id
        LEFT JOIN fss_bill_rece_entry_state res ON res.rece_id = ri.rece_id <if test="type != null"> and res.type = #{type}</if>
        WHERE ri.is_state = 0 and wit.with_out = 1
        <if test="userId != null and userId != ''">
            and ri.company_id in (select bu.bukrs from  fss_base_role_organ_busi bu join sec_user_role ur on bu.role_id=ur.role_id
            and (bu.mandt=#{mandtText} or bu.mandt is null or bu.mandt ='') and ur.user_id=#{userId} group by bu.bukrs)
        </if>
        <if test="endDate!=null">
          and  ri.stop_date &gt; #{endDate}
        </if>
        <if test="companyIdStart!=null">
          and ri.company_id &gt;= #{companyIdStart}
        </if>
        <if test="commpanyIdEnd!=null">
            and ri.company_id &lt;= #{commpanyIdEnd}
        </if>
        <if test="noReceState!=null">
            and wit.with_out = #{noReceState}
        </if>
        <if test="rrType!=null">
            and ri.rece_state = '背书'
            and rec.rr_type = #{rrType}
        </if>
        <if test="postDate!=null">

        </if>
        <if test="postState!=null">
            <if test="postState == '未入账'.toString()">
                and (res.entry_status = '未入账' or res.entry_status = '' or res.entry_status is null)
            </if>
            <if test="postState=='已入账'.toString() or postState == '已冲销'.toString()">
                and res.entry_status = #{postState}
            </if>
        </if>
        order by ri.rece_number
    </select>
    <select id="selCompanyIdByName" resultType="String">
        select bukrs from v_organ where name = #{companyName} limit 1
    </select>

    <select id="selBankIdByNmae" resultType="String">
        select head_id from fss_base_bank_head_office where head_name = #{bankName} order by create_time desc limit 1
    </select>

    <select id="selBankIdByName" resultType="String">
        select branch_id from fss_base_bank_branch where branch_name = #{bankName}
    </select>
    <select id="selDataCount" resultType="int">
      select count(*) from fss_bill_receivable_info ri left join fss_bill_receivable_recite rr on ri.rr_id = rr.rr_id
      where ri.company_id = #{companyId} and ri.rece_number = #{receNumber} and rr.up_customer_name = #{upCustomerName} and ri.rece_money = #{receMoney}
      and ri.is_state = 0
    </select>

    <select id="selData" resultMap="BaseResultMap">
        select * from fss_bill_receivable_info ri left join fss_bill_receivable_recite rr on ri.rr_id = rr.rr_id
        where ri.company_id = #{companyId} and ri.rece_number = #{receNumber} and rr.up_customer_name = #{upCustomerName} and ri.rece_money = #{receMoney}
          and ri.is_state = 0 limit 1
    </select>
    <select id="selUpCompanyIdByName" resultType="String">
      select ka.kunnr from kna1 ka
    inner join (
    select kb.kunnr from knb1 kb)kb on kb.kunnr = ka.kunnr
  where ka.name1 = #{upCustomerName}
GROUP BY ka.mandt,ka.kunnr,kb.kunnr limit 1
    </select>
    <select id="setReceReminderInfo" parameterType="cn.com.personnel.ercp.pi.module.receivable.BillReceReminderVO" resultType="cn.com.personnel.ercp.pi.module.receivable.BillReceReminderDTO">
        SELECT
	ri.rece_id AS receId,
	ri.company_id AS companyId,
	ri.company_name AS companyName,
	ri.rece_number AS receNumber,
	ri.rece_state AS receState,
	ri.c_date AS cDate,
	ri.stop_date AS stopDate,
	ri.rece_money AS receMoney,
	dra.drawer_id AS drawerId,
	dra.drawer_name AS drawerName,
	dra.drawer_bank_id AS drawerBankId,
	dra.drawer_bank AS drawerBank,
	dra.drawer_number AS drawerNumber,
	pay.payee_id as payeeId,
	pay.payee_name as payeeName,
	date_part('day', CAST(ri.stop_date AS TIMESTAMP) - CAST(now() AS TIMESTAMP)) as stopDays
FROM
	fss_bill_receivable_info ri
	LEFT JOIN fss_bill_receivable_drawer dra ON ri.rece_id = dra.rece_id
	LEFT JOIN fss_bill_receivable_payee pay ON ri.rece_id = pay.rece_id
WHERE
	ri.is_state = 0 and (ri.rece_state = '收存' or ri.rece_state = '办理托收')
        <if test="companyId!=null">
            and ri.company_id = #{companyId}
        </if>
        <if test="receNumber!=null">
            and ri.rece_number like concat('%',#{receNumber},'%')
        </if>
        <if test="drawerName!=null">
            and dra.drawer_name like concat('%',#{drawerName},'%')
        </if>
        <if test="payeeName!=null">
            and pay.payee_name like concat('%',#{payeeName},'%')
        </if>
        <if test="sDateEnd!=null">
            and ri.s_date &lt;= #{sDateEnd}
        </if>
        <if test="sDateStart!=null">
            and ri.s_date &gt;= #{sDateStart}
        </if>
        <if test="remDate!=null">
            and ri.stop_date &lt;= #{remDate}
            and date_part('day', CAST(ri.stop_date AS TIMESTAMP) - CAST(#{remDate} AS TIMESTAMP)) &lt;= 7
        </if>
    </select>
    <!--and date_part('day', CAST(ri.stop_date AS TIMESTAMP) - CAST(#{remDate} AS TIMESTAMP)) &gt;= 0-->
    <!--查询票据明细-->
    <select id="getReceInfos"
            resultType="cn.com.personnel.ercp.pi.module.receivable.BillReceivableSDTO">
        SELECT
        ri.rece_id as receId,
        ri.rece_number as receNumber,
        ri.s_date as sDate,
        ri.rece_money as receMoney,
        ri.c_date as cDate,
        ri.stop_date as stopDate,
        ri.rece_state as receState,
        ri.storage_state as storageState,
        ri.rece_form as receForm,
        ri.is_transfer as isTransfer,
        ri.is_state as isState,
        ri.currency as currency,
        ri.creator_id as creatorId,
        ri.creator as creator,
        ri.create_time as createTime,
        ri.upd_time as updTime,
        ri.currency_code as currencyCode,
        ri.company_id as companyId,
        ri.company_name as companyName,
        ri.rece_prctr as recePrctr,
        ri.rece_ltext as receLtext,
        rd.rd_id as rdId,
        rd.admin_depart_id as adminDepartId,
        rd.admin_depart as adminDepart,
        rd.custodian_id as custodianId,
        rd.custodian,
        rd.phone,
        rd.safekeep_depart_id as safekeepDepartId,
        rd.safekeep_depart as safekeepDepart,
        rd.effective_date as effectiveDate,
        rd.fail_date as failDate,
        rder.drawer_id as drawerId,
        rder.drawer_name as drawerName,
        rder.drawer_number as drawerNumber,
        rder.drawer_bank_id as drawerBankId,
        rder.drawer_bank as drawerBank,
        rp.payee_id as payeeId,
        rp.payee_bank as payeeBank,
        rp.payee_name as payeeName,
        rp.payee_number as payeeNumber,
        rp.payee_bank_id as payeeBankId,
        rr.rr_id as rrId,
        rr.rr_type as rrType,
        rr.customer_a_id as customerAId,
        rr.customer_a_name as customerAName,
        rr.rr_sum_money as rrSumMoney,
        rr.rr_c_bank_name as rrCBankName,
        rr.rr_c_number as rrCNumber,
        rr.rr_c_bank_id as rrCBankId,
        rr.rr_date as rrDate,
        rr.rr_form as rrForm,
        rr.rr_form_number as rrFormNumber,
        rr.rr_number as rrNumber,
        rr.payment_in_number as paymentInNumber,
        rr.handover_person as handoverPerson,
        rr.handover_person_id as handoverPersoId,
        rr.remarks as remarks,
        rr.customer_b_id as customerBId,
        rr.customer_b_name as customerBName,
        rr.rr_cb_bank_name as rrCbBankName,
        rr.rr_cb_bank_id as rrCbBankId,
        rr.rr_cb_number as rrCbNumber,
        rr.up_rr_type as upRrType,
        rr.up_customer_id as upCustomerId,
        rr.up_customer_name as upCustomerName,
        tra.transfer_id as transferId,
        tra.apply_number as applyNumber,
        tra.transfer_type as transferType,
        ri.signature_state as signatureState,
        ri.acceptor_name as acceptorName,
        ri.acceptor_bank_name  as acceptorBankName,
        ri.acceptor_bank_number  as acceptorBankNumber,
        ri.acceptor_bank_car_id  as acceptorBankCarId
        FROM
        fss_bill_receivable_info ri
        LEFT JOIN fss_bill_receivable_depart rd ON ri.rd_id = rd.rd_id
        LEFT JOIN fss_bill_receivable_drawer rder ON ri.rece_id = rder.rece_id
        LEFT JOIN fss_bill_receivable_payee rp ON ri.rece_id = rp.rece_id
        LEFT JOIN fss_bill_receivable_recite rr ON ri.rr_id = rr.rr_id
        LEFT JOIN fss_bill_receivable_transfer tra ON ri.transfer_id = tra.transfer_id
        WHERE
        ri.is_state = 0
        <if test="receIds!=null">
            and ri.rece_id in
            <foreach item="item" index="index" collection="receIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY ri.create_time desc
    </select>

    <!--根据利润编号查询信息-->
    <select id="getCepctInfo" resultType="cn.com.personnel.ercp.pi.persistence.entity.receivable.CepctInfo" >
        select
        mandt,
        spras,
        prctr,
        datbi,
        kokrs,
        ktext,
        ltext,
        mctxt
         from cepct where prctr = #{prctr}
    </select>


    <select id="getCompanyById" resultType="cn.com.personnel.ercp.pi.persistence.entity.receivable.VorganInfo">
        select * from v_organ where bukrs = #{companyId}
    </select>
    <select id="getBillReceSumMoney" resultType="cn.com.personnel.ercp.pi.module.receivable.BIllReceOrganMoney">
select
  company_id as organId,
  company_name as organName,
  sum(rece_money) as sumMoney,
  rece_state as state
from fss_bill_receivable_info
  where rece_state = #{state} and is_state = 0
group by company_id,company_name,rece_state
order by company_id
    </select>
    <select id="getBillReceSumMoneyByCondition" resultType="cn.com.personnel.ercp.pi.module.receivable.BIllReceByOrganMoney">
select
  company_id as organId,
  company_name as organName,
  reci.up_customer_name as upCustomerName,
  sum(rece_money) as sumMoney,
  rece_state as state
from fss_bill_receivable_info rece left join fss_bill_receivable_recite reci on rece.rr_id = reci.rr_id
  where rece_state = '收存' and is_state = 0 and rece.s_date &lt;= #{collectDate}
        <if test="companyIds!=null">
            and rece.company_id in
            <foreach item="item" index="index" collection="companyIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="customerNames!=null">
            and reci.up_customer_name in
            <foreach item="item" index="index" collection="customerNames" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
group by company_id,company_name,rece_state,reci.up_customer_name
order by company_id
    </select>
    <select id="selectByCompany" resultType="java.lang.String">
        select busi from v_organ where bukrs=#{companyId};
    </select>

    <select id="selReceBillInfo" resultMap="BaseResultMap">
        select * from fss_bill_receivable_info where company_name = #{companyName} and rece_number = #{receNumber} and rece_money = #{receMoney} and rece_state = '收存' and is_state = '0'
    </select>
</mapper>
